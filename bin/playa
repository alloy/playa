#!/usr/bin/env ruby
#
# Usage:
# playa [pattern ...]
#
require_relative '../lib/playa'

music = Playa::Music.new '~/Music/**/**/**/*.mp3'
music.load

include Picky

index = Index.new :playa do
  key_format :to_sym
  indexing splits_text_on: /[\s\.\-]/
  category :title,
           partial: Partial::Postfix.new(from: 1)
  category :artist,
           partial: Partial::Postfix.new(from: 1)
  category :album,
           partial: Partial::Postfix.new(from: 1)
  category :year,
           partial: Partial::None.new
  category :genre,
           partial: Partial::Postfix.new(from: 1)
end
controller = Playa::Controller.new music, index

extend Helpers::Measuring

duration = timed { controller.index }
puts "#{music.size} songs indexed in #{duration.round(1)}s."

Signal.trap 'INT' do
  exit 0
end

# query = ''
# loop do
#   query = gets
#   puts "Searching for #{query = controller.expand query}."
#   results = controller.filter query
#   # puts "Found #{results} songs for #{query}."
#   controller.play
#   sleep 0.1
# end

require 'highline/import'
prompt = '> '
query = ''
info = ''
gobble = 0

results = Playa::Results.new controller, music

loop do
  result = ask "#{prompt}#{query} #{info}" do |q|
      q.overwrite = true
      q.echo      = false  # overwrite works best when echo is false.
      q.character = true   # if this is set to :getc then overwrite does not work
  end
  
  if gobble > 0
    gobble -= 1
    next
  end
  if result == "\e"
    results.next
    gobble = 2
    next
  end
  
  case result
  when "\r"
    results.next
    next
  when "\x7F"
    query.chop!
  else
    query << result
  end
  
  # TODO expand differently
  #
  query = controller.expand query
  results = controller.filter query
  info = "(#{results.size})"
  results.play
  sleep 0.1
end